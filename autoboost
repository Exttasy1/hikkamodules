import asyncio
from telethon.tl.types import Message
from telethon import functions
from .. import loader, utils
from ..inline.types import InlineCall

#meta developer: @mineevor

@loader.tds
class AutoBoost(loader.Module):
    """–ú–æ–¥—É–ª—å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∞–º–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –±—É—Å—Ç–µ—Ä–∞"""
    strings = {
        "name": "AutoBoost"
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
                loader.ConfigValue(
                    "status",
                    False,
                    lambda: "–ù–ï –¢–†–û–ì–ê–¢–¨!!",
                    validator=loader.validators.Boolean()
                ),
                loader.ConfigValue(
                    "type",
                    None,
                    lambda: "–¢—É—Ç –Ω–∞–ø–∏—à–∏—Ç–µ —Ç–∏–ø –±—É—Å—Ç–µ—Ä–∞, –†/–î",
                    validator=loader.validators.String()
                ),
                loader.ConfigValue(
                    "mnoz",
                    None,
                    lambda: "–¢—É—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞, 1.5, 2, 2.5, 3",
                    validator=loader.validators.Float()
                )
            )

    @loader.watcher(only_message=True, chat_id=5522271758)
    async def watcher(self, message):
        if self.config["status"]:
            type = self.config["type"]
            mnoz = self.config["mnoz"]
            if "–∑–∞–∫–æ–Ω—á–∏–ª —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ." in message.raw_text:
                await self.client.send_message(5522271758, f"–ë—É—Å—Ç {type} {mnoz}")
                
    @loader.command()
    async def ab(self, message):
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–º –∫–Ω–æ–ø–∫–∞–º–∏"""
        type = self.config["type"]
        mnoz = self.config["mnoz"]
        if self.config["status"]:
            status = "–í–∫–ª—é—á–µ–Ω"
        else:
            status = "–í—ã–∫–ª—é—á–µ–Ω"
            
        await self.inline.form(
                text=f"üéÆ <b>–£–ø—Ä–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–º</b> <b>AutoBoost</b>\n\n‚ñ´Ô∏è<b>–°—Ç–∞—Ç—É—Å:</b> {status}\n‚ñ´Ô∏è<b>–¢–µ–∫—É—â–∏–π –±—É—Å—Ç–µ—Ä:</b> {type} {mnoz}",
                message=message,
                reply_markup=[
                        {
                            "text": "–í–∫–ª/–í—ã–∫–ª",
                            "callback": self.inline_but_one,
                        },
                        {
                            "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                            "callback": self.inline_but_two,
                        }
                    ]
            )
            
    async def inline_but_one(self, call: InlineCall):
        self.config["status"] = not self.config["status"]
        status = self.config["status"]
        await call.answer(f"AutoBoost {status}")
        if self.config["status"]:
            type = self.config["type"]
            mnoz = self.config["mnoz"]
            await self.client.send_message(5522271758, f"–ë—É—Å—Ç {type} {mnoz}")
        type = self.config["type"]
        mnoz = self.config["mnoz"]
        if self.config["status"]:
            status = "–í–∫–ª—é—á–µ–Ω"
        else:
            status = "–í—ã–∫–ª—é—á–µ–Ω"
            
        await call.edit(
                text=f"üéÆ <b>–£–ø—Ä–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–º</b> <b>AutoBoost</b>\n\n‚ñ´Ô∏è<b>–°—Ç–∞—Ç—É—Å:</b> {status}\n‚ñ´Ô∏è<b>–¢–µ–∫—É—â–∏–π –±—É—Å—Ç–µ—Ä:</b> {type} {mnoz}",
                reply_markup=[
                        {
                            "text": "–í–∫–ª/–í—ã–∫–ª",
                            "callback": self.inline_but_one,
                        },
                        {
                            "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                            "callback": self.inline_but_two,
                        }
                    ]
            )
    
    async def inline_but_two(self, call: InlineCall):
        type = self.config["type"]
        mnoz = self.config["mnoz"]
        await call.edit(
                text=f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n‚ñ´Ô∏è<b>–¢–∏–ø:</b> {type}\n‚ñ´Ô∏è<b>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: </b>{mnoz}",
                reply_markup=[
                        [
                            {
                                "text": "–¢–∏–ø",
                                "callback": self.inline_but_four,
                            },
                            {
                                "text": "–ú–Ω–æ–∂–∏—Ç–µ–ª—å",
                                "callback": self.inline_but_five,
                            }
                        ],
                        [
                            {
                                "text": "–ù–∞–∑–∞–¥",
                                "callback": self.inline_but_three,
                            }
                        ]
                    ]
            )
            
    async def inline_but_three(self, call: InlineCall):
        type = self.config["type"]
        mnoz = self.config["mnoz"]
        if self.config["status"]:
            status = "–í–∫–ª—é—á–µ–Ω"
        else:
            status = "–í—ã–∫–ª—é—á–µ–Ω"
            
        await call.edit(
                text=f"üéÆ <b>–£–ø—Ä–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª–µ–º</b> <b>AutoBoost</b>\n\n‚ñ´Ô∏è<b>–°—Ç–∞—Ç—É—Å:</b> {status}\n‚ñ´Ô∏è<b>–¢–µ–∫—É—â–∏–π –±—É—Å—Ç–µ—Ä:</b> {type} {mnoz}",
                reply_markup=[
                        {
                            "text": "–í–∫–ª/–í—ã–∫–ª",
                            "callback": self.inline_but_one,
                        },
                        {
                            "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                            "callback": self.inline_but_two,
                        }
                    ]
            )
            
        
            
    async def inline_but_four(self, call: InlineCall):
        await call.edit(
                text=f"üóíÔ∏è <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—É—Å—Ç–µ—Ä–∞:</b>",
                reply_markup=[
                        [
                            {
                                "text": "–†—É–¥–∞",
                                "callback": self.abobaone,
                            },
                            {
                                "text": "–î–µ–Ω—å–≥–∏",
                                "callback": self.abobatwo,
                            }
                        ],
                        [
                            {
                                "text": "–ù–∞–∑–∞–¥",
                                "callback": self.inline_but_twoa,
                            }
                        ]
                    ]
            )
            
    async def inline_but_twoa(self, call: InlineCall):
        type = self.config["type"]
        mnoz = self.config["mnoz"]
        await call.edit(
                text=f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n‚ñ´Ô∏è<b>–¢–∏–ø:</b> {type}\n‚ñ´Ô∏è<b>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: </b>{mnoz}",
                reply_markup=[
                        [
                            {
                                "text": "–¢–∏–ø",
                                "callback": self.inline_but_four,
                            },
                            {
                                "text": "–ú–Ω–æ–∂–∏—Ç–µ–ª—å",
                                "callback": self.inline_but_five,
                            }
                        ],
                        [
                            {
                                "text": "–ù–∞–∑–∞–¥",
                                "callback": self.inline_but_three,
                            }
                        ]
                    ]
            )
        
    async def inline_but_five(self, call: InlineCall):
        await call.edit(
                text=f"üóíÔ∏è <b>–í—ã–±–µ—Ä–∏—Ç–µ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞:</b>",
                reply_markup=[
                        [
                            {
                                "text": "1.5",
                                "callback": self.abobathree,
                            },
                            {
                                "text": "2.0",
                                "callback": self.abobafour,
                            },
                            {
                                "text": "2.5",
                                "callback": self.abobafive,
                            },
                            {
                                "text": "3.0",
                                "callback": self.abobasix,
                            }

                        ],
                        [
                            {
                                "text": "–ù–∞–∑–∞–¥",
                                "callback": self.inline_but_twoa,
                            }
                        ]
                    ]
            )
            
    async def abobaone(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–∏–ø –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"–†—É–¥–∞\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["type"] = "–†—É–¥–∞"
        
    async def abobatwo(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ —Ç–∏–ø –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"–î–µ–Ω—å–≥–∏\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["type"] = "–î–µ–Ω—å–≥–∏"
        
    async def abobathree(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"1.5\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["mnoz"] = 1.5
        
    async def abobafour(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"2.0\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["mnoz"] = 2.0
        
    async def abobafive(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"2.5\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["mnoz"] = 2.5
        
    async def abobasix(self, call: InlineCall):
        await call.edit(
                text=f"<b>üìù –í—ã –∏–∑–º–µ–Ω–∏–ª–∏ –º–Ω–æ–∂–∏—Ç–µ–ª—å –±—É—Å—Ç–µ—Ä–∞ –Ω–∞:</b> \"3.0\"",
                reply_markup=[
                        {
                            "text": "–ù–∞–∑–∞–¥",
                            "callback": self.inline_but_twoa,
                        }
                    ]
            )
        self.config["mnoz"] = 3.0
